<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis3.mappers.map.BookMapper">
	
	<select id="find_all_book_list" resultType="map">
		SELECT id, isbn, title, published_on
		FROM books a
	</select>
	
	<select id="find_book_list_by_publisher_id" parameterType="int" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on, p.name publisher_name
		FROM books b, publishers p
		WHERE b.publisher_id = #{publisher_id}
		AND b.publisher_id = p.id
	</select>
	
	<select id="find_book_list_by_author_id" parameterType="int" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on
		FROM books b, books_authors ba
		WHERE b.id = ba.book_id
		AND ba.author_id = #{author_id}
	</select>
	
	<select id="find_book_by_id_1" parameterType="int" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on,
			p.id publisher_id, p.name publisher_name, p.phone_number
		FROM books b, publishers p
		WHERE b.id = #{id}
		AND b.publisher_id = p.id
	</select>
	
	<select id="_find_publisher_by_id" parameterType="int" resultType="map">
		SELECT id, name, phone_number
		FROM publishers
		WHERE id = #{id}
	</select>
	
	<resultMap id="book_detail_result_3" type="BookMap">
		<id property="id" column="id"/>
		<result property="isbn" column="isbn"/>
		<result property="title" column="title"/>
		<result property="published_on" column="published_on"/>
		<association property="publisher" column="publisher_id" select="_find_publisher_by_id"/>
	</resultMap>
	<select id="find_book_by_id_3" parameterType="int" resultMap="book_detail_result_3">
		SELECT id, isbn, title, published_on, publisher_id
		FROM books
		WHERE id = #{id}
	</select>
	
	<select id="_find_author_by_book_id" parameterType="int" resultType="map">
		SELECT a.id, a.name, a.email
		FROM books b
			LEFT OUTER JOIN books_authors ba ON b.id = ba.book_id
			LEFT OUTER JOIN authors a ON ba.author_id = a.id
		WHERE b.id = #{book_id}
	</select>
	
	<resultMap id="book_detail_result_5" type="BookMap">
		<id property="id" column="id"/>
		<result property="isbn" column="isbn"/>
		<result property="title" column="title"/>
		<result property="published_on" column="published_on"/>
		<association property="publisher" column="publisher_id" select="_find_publisher_by_id"/>
		<collection property="author_list" column="book_id" select="_find_author_by_book_id"/>
	</resultMap>
	<!--
	<select id="find_book_by_id_5" parameterType="int" resultMap="book_detail_result_5">
		SELECT b.id, b.isbn, b.title, b.published_on, b.publisher_id, ba.author_id
		FROM books b LEFT OUTER JOIN books_authors ba ON b.id = ba.book_id
		WHERE b.id = #{id}
	</select>
	-->
	<select id="find_book_by_id_5" parameterType="int" resultMap="book_detail_result_5">
		SELECT b.id, b.isbn, b.title, b.published_on, b.publisher_id, b.id book_id
		FROM books b
		WHERE b.id = #{id}
	</select>
	
	<select id="find_book_list_by_author_id_and_more" parameterType="map" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on
		FROM books b, books_authors ba
		WHERE b.id = ba.book_id
		AND ba.author_id = #{author_id}
		<if test="title != null">
			AND b.title LIKE #{title}
		</if>
	</select>
	
	<select id="find_book_list_by_author_id_or_publisher_id" parameterType="map" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on
		FROM books b
		<choose>
			<when test="search_by == 'author'">
				LEFT OUTER JOIN books_authors ba ON b.id = ba.book_id
				WHERE ba.author_id = #{author_id}
			</when>
			<when test="search_by == 'publisher'">
				WHERE b.publisher_id = #{publisher_id}
			</when>
			<otherwise>
				WHERE b.published_on &gt; date('2014-03-01')
			</otherwise>
		</choose>
	</select>
	
	<select id="find_book_list_by_publisher_id_or_title_1" parameterType="map" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on
		FROM books b
		<where>
			<if test="publisher_id != null">
				b.publisher_id = #{publisher_id}
			</if>
			<if test="title != null">
				AND b.title LIKE #{title}
			</if>
		</where>
	</select>
	
	<select id="find_book_list_by_publisher_id_or_title_2" parameterType="map" resultType="map">
		SELECT b.id, b.isbn, b.title, b.published_on
		FROM books b
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="publisher_id != null">
				b.publisher_id = #{publisher_id}
			</if>
			<if test="title != null">
				AND b.title LIKE #{title}
			</if>
		</trim>
	</select>
	
	<select id="find_book_list_by_author_id_list_1" parameterType="map" resultType="map">
		SELECT id, isbn, title, published_on
		FROM books b
		WHERE id IN (
			SELECT book_id
			FROM books_authors ba
			<if test="author_id_list != null">
				<where>
					<foreach item="author_id" collection="author_id_list">
						OR ba.author_id = #{author_id}
					</foreach>
				</where>
			</if>
		)
	</select>
	
	<select id="find_book_list_by_author_id_list_2" parameterType="map" resultType="map">
		SELECT id, isbn, title, published_on
		FROM books b
		WHERE id IN (
			SELECT book_id
			FROM books_authors ba
			<if test="author_id_list != null">
				<where>
					ba.author_id IN
					<foreach item="author_id" collection="author_id_list" open="(" separator="," close=")">
						#{author_id}
					</foreach>
				</where>
			</if>
		)
	</select>
	
	<insert id="insert_book" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO books (
			isbn, title, publisher_id, published_on
		) VALUES (
			#{isbn}, #{title}, #{publisher.id}, #{published_on}
		)
	</insert>
	<!--
	insert_book_author
	-->
	<update id="update_book" parameterType="map">
		UPDATE books
		SET isbn = #{isbn}, title = #{title},
			publisher_id = #{publisher.id}, published_on = #{published_on}
		WHERE id = #{id}
	</update>
	<update id="update_book_alt" parameterType="map">
		UPDATE books
		<set>
			<if test="isbn != null">isbn = #{isbn},</if>
			<if test="title != null">title = #{title},</if>
			<if test="publisher != null">publisher_id = #{publisher.id},</if>
			<if test="published_on != null">published_on = #{published_on},</if>
		</set>
		WHERE id = #{id}
	</update>
	<!--
	delete_book_author
	-->
	<delete id="delete_book" parameterType="int">
		DELETE FROM books
		WHERE id = #{id}
	</delete>
</mapper>